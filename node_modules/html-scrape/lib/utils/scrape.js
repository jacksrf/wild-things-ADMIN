'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scrape = undefined;

var _needler = require('needler');

var _request = require('request');

var _request2 = _interopRequireDefault(_request);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scrape = function scrape(host, elems, callback) {

  fetchUrl(host, function (error, html) {
    if (error) {
      callback(error);
    }

    validateElements(elems, function (error) {
      if (error) {
        callback(error);
      }

      var count = 0;
      var numOfElements = _lodash2.default.size(elems);
      var data = {};

      _lodash2.default.forEach(elems, function (element, key) {

        count++;

        var options = {
          haystack: html,
          header: element.start,
          footer: element.end
        };

        (0, _needler.find)(options, function (error, result) {

          if (result) {
            data[key] = result;
          }

          if (count === numOfElements) {
            callback(false, data);
          }
        });
      });
    });
  });
};

var fetchUrl = function fetchUrl(host, callback) {
  (0, _request2.default)(host, function (error, response, body) {
    if (error) {
      callback(error);
    }

    callback(false, body);
  });
};

var validateElements = function validateElements(elements, callback) {
  if (!elements) {
    callback('No elements to scrape.');
  } else if (_lodash2.default.size(elements) < 1) {
    callback('Elements object was found, but no elements were specified.');
  }

  callback(false);
};

exports.scrape = scrape;